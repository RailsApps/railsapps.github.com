h1. The RailsApps Website

This repository contains the static web pages for the site at "http://railsapps.github.io":http://railsapps.github.io.

To update the content for this website, use the GitHub wiki:

* "https://github.com/railsapps/railsapps.github.io/wiki":https://github.com/railsapps/railsapps.github.io/wiki

To change the layout and design, edit the *_Layout.html* file and CSS and Javascript in the railsapps.github.io.wiki repository.

Then use the "gollum-site":https://github.com/dreverri/gollum-site gem to generate static web pages from the wiki. To commit the generated web pages, you'll need repository read+write permission as an organization team member.

h2. Objectives

Here are the goals I had in mind when I set up the RailsApp site:

* I wanted to use GitHub's capability for hosting the site. The hosting is free and the wiki is familiar to GitHub users. I didn't want to deploy a dedicated CMS or use a wiki hosted elsewhere.

* I'd like any GitHub user to be able to add to the site (or make corrections) by editing the repository's "wiki pages":https://github.com/railsapps/railsapps.github.io/wiki/_pages directly.

* I like being able to edit the wiki pages locally using Textile markup and commit changes to the GitHub repository. I use the same text editor and workflow that I use for maintaining code.

* On its own, the GitHub wiki does not provide everything needed for the project website. I wanted to improve the layout and design to make the site more attractive and useful. I wanted to add Javascript for the Disqus commenting system as well as a Google Analytics tracking script. I anticipated I would use a tool such as "Jekyll":https://github.com/mojombo/jekyll to combine the wiki files with a layout template and generate static web pages to upload to GitHub for site hosting.

* As the maintainer of the site, I anticipate generating static web pages from the wiki files periodically (or when I notice changes to the wiki pages or am alerted with a "GitHub issue":http://github.com/railsapps/railsapps.github.io/issues). I don't need to have the site updated dynamically.

I looked at several "static website generators":http://nanoc.stoneship.org/docs/1-introduction/, including "Jekyll":https://github.com/mojombo/jekyll, and decided "gollum-site":https://github.com/dreverri/gollum-site most closely fit my requirements.

h2. Publishing Workflow

You can edit the "wiki pages online":https://github.com/railsapps/railsapps.github.io/wiki/_pages. Alternatively, you can edit them locally in a text editor after cloning the repository.

Here's how you can edit the pages locally and generate a new version of the website from the wiki pages.

The "gollum-site":https://github.com/dreverri/gollum-site gem is used to generate static web pages from the "wiki":https://github.com/railsapps/railsapps.github.io/wiki/_pages.

h4. Install the Gollum-Site Gem

Install the gollum-site gem plus the RedCloth gem (to support "Textile":http://www.textism.com/tools/textile/ markup).

<pre>
$ gem install gollum-site RedCloth
</pre>

h4. Clone the Repos

Note that there are two repositories: the "site repo":https://github.com/RailsApps/railsapps.github.io (for the static web pages) and the "wiki repo":https://github.com/RailsApps/railsapps.github.io/wiki (for the wiki pages).

We'll assume you will create a directory for the project and download the needed files.

<pre>
$ mkdir ~/railsapps
$ cd ~/railsapps
$ git clone git@github.com:RailsApps/railsapps.github.io.git
$ git clone git@github.com:RailsApps/railsapps.github.io.wiki.git
</pre>

h4. Edit the Content

Make sure you are in the git "master" branch. Edit the wiki pages and commit any changes.

<pre>
$ cd railsapps.github.io.wiki
$ git checkout master
## edit wiki pages with a text editor
$ git commit -am "update wiki"
</pre>

h4. Change the Layout and Design

To change the layout and design, edit the *_Layout.html* file and change any CSS and Javascript files in the railsapps.github.io.wiki repository. Then commit any changes.

<pre>
## edit the *_Layout.html* file with a text editor
## edit the *css/screen.css* file with a text editor
$ git commit -am "update layout"
</pre>

h4. Generate Static Web Pages

When you are ready to generate the static pages, use the gollum-site gem to generate the static web pages in the wiki repo. Gollum-site has a built-in web server if you want to view the site locally before committing and publishing to GitHub.

<pre>
$ gollum-site generate ## to generate static webpages in "./_site" folder
$ gollum-site serve ## to view the static site at http://localhost:8000
</pre>

h4. Publish to GitHub

Copy the generated @_site@ directory to the site repo. Rename the @Home.html@ page as @index.html@. Commit the changes and push the repo up to GitHub.To commit the generated web pages, you'll need repository read+write permission as an organization team member. GitHub will automatically publish the updated site in less than a minute.

<pre>
$ cp -R _site/* ../railsapps.github.io
$ rm -rf _site/
$ cd ../railsapps.github.io
$ mv Home.html index.html
$ git add .
$ git commit -am "update website"
$ git push origin master
</pre>

See the updated site at "http://railsapps.github.io":http://railsapps.github.io.

h4. Alternative Approaches

I looked at "Jekyll":https://github.com/mojombo/jekyll. It generates static pages from markup but it's more complex and better suited to publishing a blog.

I looked at "Smeagol":https://github.com/benbjohnson/smeagol. It is a server that hosts and renders a "Gollum":http://github.com/github/gollum wiki (such as GitHub wiki pages). It requires installation as an app on a hosting site that runs Ruby. It would require maintaining a server and would not allow the site to be hosted on a GitHub subdomain.

h2. Issues

Improvements or corrections to the web site? You can edit the "wiki pages":https://github.com/railsapps/railsapps.github.io/wiki/_pages directly.

h2. Credits

Daniel Kehoe ("http://danielkehoe.com/":http://danielkehoe.com/) maintains the website.

You are welcome to contribute.

h2. MIT License

"MIT License":http://www.opensource.org/licenses/mit-license

Copyright Â© 2012 Daniel Kehoe

!https://cruel-carlota.pagodabox.com/9a7ed11e8570e461c585a7afd3722d71(githalytics.com alpha)!
